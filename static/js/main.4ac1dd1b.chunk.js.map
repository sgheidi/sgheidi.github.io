{"version":3,"sources":["resume.pdf","components/SocialMedia.js","components/DarkModeToggle.js","components/Card.js","components/BottomNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","link_icon","fontSize","git_icon","git_992","link_992","git_688_992","link_688_992","ShowDarkLogos","bp992","useMediaQuery","query","bp688_992","href","color","style","ShowLightLogos","SocialMedia","darkMode","useDarkMode","value","sun","moon","sun_688_992","moon_688_992","DarkModeToggle","className","type","onClick","disable","enable","makeStyles","root_black","maxWidth","background","boxShadow","root_white","button_black","padding","button_white","useStyles","textTransform","borderRadius","width","height","mid_button","button_style_688_992","mid_button_688_992","button_style_992","BottomNav","classes","Button","Resume","variant","darkstyle","textDecoration","lightstyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ac1dd1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.4ce9d860.pdf\";","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { useMediaQuery } from 'react-responsive';\nimport { Link } from '@material-ui/core';\n\nconst link_icon = {\n  fontSize: \"5.5vw\",\n\n};\nconst git_icon = {\n  fontSize: \"4.5vw\",\n\n};\n\nconst git_992 = {\n  fontSize: \"22\",\n};\n\nconst link_992 = {\n  fontSize: \"27\",\n};\n\nconst git_688_992 = {\n  fontSize: \"4vw\",\n};\n\nconst link_688_992 = {\n  fontSize: \"4.9vw\",\n};\n\nfunction ShowDarkLogos() {\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-device-width: 992px)'\n  });\n  if (bp992) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"secondary\" style={link_992}/>\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"secondary\" style={git_992}/>\n        </a>\n      </>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"secondary\" style={link_688_992}/>\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"secondary\" style={git_688_992}/>\n        </a>\n      </>\n    );\n  }\n  else {\n    return (\n        <>\n          <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n            <LinkedInIcon color=\"secondary\" style={link_icon}/>\n          </a>\n          <a href=\"https://www.github.com/sgheidi\">\n            <GitHubIcon color=\"secondary\" style={git_icon}/>\n          </a>\n        </>\n    );\n  }\n}\n\nfunction ShowLightLogos() {\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-device-width: 992px)'\n  });\n  if (bp992) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"action\" style={link_992}/>\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"action\" style={git_992}/>\n        </a>\n      </>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"action\" style={link_688_992}/>\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"action\" style={git_688_992}/>\n        </a>\n      </>\n    );\n  }\n  else {\n    return (\n        <>\n          <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n            <LinkedInIcon color=\"action\" style={link_icon}/>\n          </a>\n          <a href=\"https://www.github.com/sgheidi\">\n            <GitHubIcon color=\"action\" style={git_icon}/>\n          </a>\n        </>\n    );\n  }\n}\n\nexport default function SocialMedia() {\n  const darkMode = useDarkMode(false);\n  if (darkMode.value == true) {\n    return <ShowDarkLogos />\n  }\n  else if (darkMode.value == false) {\n    return <ShowLightLogos />\n  }\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport SocialMedia from './SocialMedia';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport { useMediaQuery } from 'react-responsive'\n\nconst sun = {\n  fontSize: \"5.5vw\",\n};\nconst moon = {\n  fontSize: \"5.5vw\",\n};\nconst sun_688 = {\n  fontSize: \"7vw\",\n};\nconst moon_688 = {\n  fontSize: \"7vw\",\n};\nconst sun_688_992 = {\n  fontSize: \"4.5vw\",\n};\nconst moon_688_992 = {\n  fontSize: \"4.5vw\",\n};\n\nexport default function DarkModeToggle() {\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-device-width: 992px)'\n  });\n  const darkMode = useDarkMode(false);\n  if (bp992) {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon />\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon />\n        </button>\n      </div>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon style={sun_688_992} />\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon style={moon_688_992} />\n        </button>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon style={sun} />\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon style={moon} />\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport useDarkMode from 'use-dark-mode';\n\nconst useStyles = makeStyles({\n  root_black: {\n    maxWidth: 400,\n    background: '#caded4',\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    color: 'black',\n  },\n  root_white: {\n    maxWidth: 400,\n    background: '#112d4d',\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    color: 'white',\n  },\n  button_black: {\n    padding: \"10px 10px\",\n    color: 'red',\n  },\n  button_white: {\n    padding: \"10px 10px\",\n    color: 'black',\n  }\n});\n\nexport default function ImgMediaCard() {\n  const darkMode = useDarkMode(false);\n  const classes = useStyles();\n\n  return (\n    <Card className={(darkMode.value == true) ? classes.root_white :\n    classes.root_black}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            <b>chess-ai</b>\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" align=\"alignJustify\" onClick={console.log(\"Hi\")}>\n            A generalized minimax and alpha-beta pruning search algorithm for perfect, 2-player games.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" className={(darkMode.value == true) ? classes.button_black :\n        classes.button_white}>\n          Continue reading\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Resume from '../resume.pdf';\nimport { useMediaQuery } from 'react-responsive';\n\nconst useStyles = makeStyles({\n  button_white: {\n    color: 'white',\n    boxShadow: '0 3px 5px 2px rgba(90, 90, 90, .3)',\n    textTransform: 'none',\n    borderRadius: '25px',\n    width: '25vw',\n    height: '8vw',\n    fontSize: '3vw',\n    \"&:hover\": {\n      background: \"#184033\",\n      color: \"white\",\n    },\n  },\n  button_black: {\n    color: 'black',\n    boxShadow: '0 3px 5px 2px rgba(90, 90, 90, .3)',\n    textTransform: 'none',\n    borderRadius: '25px',\n    width: '25vw',\n    height: '8vw',\n    fontSize: '3vw',\n    \"&:hover\": {\n      background: \"#d5e3de\",\n      color: \"black\",\n      boxShadow: '0 4px 4px 4px rgba(45, 45, 45, .3)'\n    },\n  },\n});\n\nconst mid_button = {\n  width: '30vw',\n  height: '8vw',\n  fontSize: '3vw'\n};\n\nconst button_style_688_992 = {\n  width: '20vw',\n  height: '8vw',\n  fontSize: '2.5vw'\n};\nconst mid_button_688_992 = {\n  width: '25vw',\n  height: '8vw',\n  fontSize: '2.5vw'\n};\n\nconst button_style_992 = {\n  width: '150px',\n  height: '35px',\n  fontSize: '15px'\n};\n\nexport default function BottomNav() {\n  const darkMode = useDarkMode(false);\n  const classes = useStyles();\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-device-width: 992px)'\n  });\n  if (bp992) {\n    return (\n      <div className=\"bottom-nav\">\n        <Button href={Resume} variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={button_style_992}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={button_style_992}>\n          Projects 📝\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={button_style_992}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <div className=\"bottom-nav\">\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={button_style_688_992}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={mid_button_688_992}>\n          Projects 📝\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={button_style_688_992}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"bottom-nav\">\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={mid_button}>\n          Projects 📝\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DarkModeToggle from './components/DarkModeToggle';\nimport Card from './components/Card';\nimport BottomNav from './components/BottomNav';\nimport useDarkMode from 'use-dark-mode';\nimport './css/styles.scss';\nimport './css/mobile.scss';\nimport './css/tablet.scss';\nimport './css/smallscreen.scss';\nimport './css/bigscreen.scss';\n\nconst darkstyle = {\n  color: \"white\",\n  textDecoration: \"none\"\n};\nconst lightstyle = {\n  color: \"black\",\n  textDecoration: \"none\"\n};\n\nexport default function App() {\n  const darkMode = useDarkMode(false);\n  return (\n    <>\n      <div className=\"navbar\">\n        <div className=\"name\">\n          <a href=\"/\" style={darkMode.value ? darkstyle : lightstyle}><b>shervan gheidi ☕ </b></a>\n        </div>\n        <DarkModeToggle />\n      </div>\n      <BottomNav />\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
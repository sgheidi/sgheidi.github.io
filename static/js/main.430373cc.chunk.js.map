{"version":3,"sources":["resume.pdf","components/SocialMedia.js","components/DarkModeToggle.js","components/Card.js","components/BottomNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","link_icon","fontSize","marginTop","git_icon","link_icon_small","git_icon_small","link_icon_small2","git_icon_small2","ShowDarkLogos","sz430","useMediaQuery","query","href","color","style","Link","ShowLightLogos","SocialMedia","darkMode","useDarkMode","value","sun_small","moon_small","sun_small2","moon_small2","DarkModeToggle","className","type","onClick","disable","enable","makeStyles","root_black","maxWidth","background","boxShadow","root_white","button_black","padding","button_white","useStyles","textTransform","styles430","width","height","styles365","openPdf","src","Resume","BottomNav","sz365","sz600","classes","Button","variant","size","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.430373cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.4ce9d860.pdf\";","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { useMediaQuery } from 'react-responsive';\nimport { Link } from '@material-ui/core';\n\nconst link_icon = {\n  fontSize: \"28\",\n  marginTop: \"4\"\n};\nconst git_icon = {\n  fontSize: \"23\",\n  marginTop: \"4\"\n};\nconst link_icon_small = {\n  fontSize: \"25\",\n  marginTop: \"4\"\n};\nconst git_icon_small = {\n  fontSize: \"20\",\n  marginTop: \"4\"\n};\nconst link_icon_small2 = {\n  fontSize: \"21\",\n  marginTop: \"4\"\n};\nconst git_icon_small2 = {\n  fontSize: \"16\",\n  marginTop: \"4\"\n};\n\nfunction ShowDarkLogos() {\n  const sz430 = useMediaQuery({\n      query: '(max-device-width: 430px)'\n    });\n  const sz365 = useMediaQuery({\n      query: '(max-device-width: 365px)'\n    });\n  if (sz365) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"secondary\" style={link_icon_small2}/> &nbsp;&nbsp;\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"secondary\" style={git_icon_small2}/>\n        </a>\n      </>\n    );\n  }\n  else if (sz430) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"secondary\" style={link_icon_small}/> &nbsp;&nbsp;\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"secondary\" style={git_icon_small}/>\n        </a>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Link href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"secondary\" style={link_icon}/> &nbsp;&nbsp;\n        </Link>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"secondary\" style={git_icon}/>\n        </a>\n      </>\n    );\n  }\n}\n\nfunction ShowLightLogos() {\n  const sz430 = useMediaQuery({\n      query: '(max-device-width: 430px)'\n    });\n  const sz365 = useMediaQuery({\n      query: '(max-device-width: 365px)'\n    });\n  if (sz365) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"action\" style={link_icon_small2}/> &nbsp;&nbsp;\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"action\" style={git_icon_small2}/>\n        </a>\n      </>\n    );\n  }\n  else if (sz430) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"action\" style={link_icon_small}/> &nbsp;&nbsp;\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"action\" style={git_icon_small}/>\n        </a>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color=\"action\" style={link_icon}/> &nbsp;&nbsp;\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color=\"action\" style={git_icon}/>\n        </a>\n      </>\n    );\n  }\n}\n\nexport default function SocialMedia() {\n  const darkMode = useDarkMode(false);\n  if (darkMode.value == true) {\n    return <ShowDarkLogos />\n  }\n  else if (darkMode.value == false) {\n    return <ShowLightLogos />\n  }\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport SocialMedia from './SocialMedia';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport { useMediaQuery } from 'react-responsive'\n\nconst sun_small = {\n  fontSize: \"25\"\n};\n\nconst moon_small = {\n  fontSize: \"25\"\n};\n\nconst sun_small2 = {\n  fontSize: \"19\"\n};\n\nconst moon_small2 = {\n  fontSize: \"19\"\n};\n\nconst DarkModeToggle = () => {\n  const darkMode = useDarkMode(false);\n  const sz430 = useMediaQuery({\n      query: '(max-device-width: 430px)'\n  });\n  const sz365 = useMediaQuery({\n      query: '(max-device-width: 365px)'\n  });\n  if (sz365) {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        &nbsp;&nbsp;\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon style={sun_small2}/>\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon style={moon_small2}/>&nbsp;\n        </button>\n      </div>\n    );\n  }\n  else if (sz430) {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        &nbsp;&nbsp;\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon style={sun_small}/> &nbsp;\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon style={moon_small}/>&nbsp;\n        </button>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        &nbsp;&nbsp;\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon/> &nbsp;\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon />&nbsp;\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default DarkModeToggle;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport useDarkMode from 'use-dark-mode';\n\nconst useStyles = makeStyles({\n  root_black: {\n    maxWidth: 400,\n    background: '#caded4',\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    color: 'black',\n  },\n  root_white: {\n    maxWidth: 400,\n    background: '#112d4d',\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    color: 'white',\n  },\n  button_black: {\n    padding: \"10px 10px\",\n    color: 'red',\n  },\n  button_white: {\n    padding: \"10px 10px\",\n    color: 'black',\n  }\n});\n\nexport default function ImgMediaCard() {\n  const darkMode = useDarkMode(false);\n  const classes = useStyles();\n\n  return (\n    <Card className={(darkMode.value == true) ? classes.root_white :\n    classes.root_black}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            <b>chess-ai</b>\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" align=\"alignJustify\" onClick={console.log(\"Hi\")}>\n            A generalized minimax and alpha-beta pruning search algorithm for perfect, 2-player games.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" className={(darkMode.value == true) ? classes.button_black :\n        classes.button_white}>\n          Continue reading\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Resume from '../resume.pdf';\nimport { useMediaQuery } from 'react-responsive';\n\nconst useStyles = makeStyles({\n  button_white: {\n    color: 'white',\n    boxShadow: '0 3px 5px 2px rgba(90, 90, 90, .3)',\n    textTransform: 'none'\n  },\n  button_black: {\n    color: 'black',\n    boxShadow: '0 3px 5px 2px rgba(90, 90, 90, .3)',\n    textTransform: 'none'\n  },\n});\n\nconst styles430 = {\n  width: '100px',\n  height: '35px',\n  fontSize: '12px'\n};\nconst styles365 = {\n  width: '90px',\n  height: '30px',\n  fontSize: '9px'\n};\n\nfunction openPdf() {\n  return (<embed src={Resume} width=\"100%\" height=\"100%\" />);\n}\n\nexport default function BottomNav() {\n  const sz365 = useMediaQuery({\n      query: '(max-device-width: 365px)'\n  });\n  const sz600 = useMediaQuery({\n      query: '(max-device-width: 600px)'\n  });\n  const sz430 = useMediaQuery({\n      query: '(max-device-width: 430px)'\n  });\n  const darkMode = useDarkMode(false);\n  const classes = useStyles();\n  if (sz365) {\n    return (\n      <div className=\"bottom-nav\">\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} onClick={() => { openPdf(); }} style={styles365}>\n        CV 💼\n        </Button>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={styles365}>\n          Projects 📝\n        </Button>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={styles365}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else if (sz430) {\n    return (\n      <div className=\"bottom-nav\">\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} onClick={() => { openPdf(); }} style={styles430}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={styles430}>\n          Projects 📝\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} style={styles430}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else if (sz600) {\n    return (\n      <div className=\"bottom-nav\">\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} onClick={() => { openPdf(); }} size=\"small\">\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} size=\"small\">\n          Projects 📝\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} size=\"small\">\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"bottom-nav\">\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black} onClick={() => { openPdf(); }}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black}>\n          Projects 📝\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Button variant=\"outlined\" className={(darkMode.value == true) ? classes.button_white :\n        classes.button_black}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DarkModeToggle from './components/DarkModeToggle';\nimport Card from './components/Card';\nimport BottomNav from './components/BottomNav';\nimport './styles.scss';\nimport './media.scss';\nimport { useMediaQuery } from 'react-responsive'\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"navbar\">\n        <div className=\"name\">\n          <b>shervan gheidi ☕ </b>\n        </div>\n        <DarkModeToggle />\n      </div>\n      <BottomNav />\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
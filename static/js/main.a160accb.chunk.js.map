{"version":3,"sources":["components/SocialMedia.js","components/DarkModeToggle.js","components/Card1.js","components/Card2.js","components/Card3.js","components/Blog.js","components/proj/Pychess.js","components/proj/UnityFPS.js","components/proj/TetrisFriends.js","components/blogs/ChessProgramming.js","components/blogs/primes.js","components/blogs/lc.js","components/blogs/AI.js","components/blogs/onemillionwallets.js","components/BottomNav.js","components/Main.js","App.js","serviceWorker.js","index.js","media/out.gif","media/ChessProgramming.jpg","media/pin.png","media/game2.gif","media/tetris.gif","media/plt.png","media/minimax.png","media/nn.png","media/dfs.png","media/resume.pdf","media/sieve.gif"],"names":["DarkToolTip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","shadows","fontSize","marginBottom","tooltipPlacementBottom","margin","Tooltip","LightTooltip","SocialMedia","darkMode","useDarkMode","useMediaQuery","query","Component","value","title","href","className","DarkModeToggle","type","onClick","disable","enable","clsasName","Card1","to","Button","variant","Card2","Card3","Blog","Pychess","src","gif","alt","gif2","UnityFPS","TetrisFriends","ChessProgramming","img","pin","class","primes","id","plt","lc","AI","dfs","nn","APIData","useStyles","makeStyles","table","minWidth","TableComponent","props","showTable","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","name","calories","fat","carbs","protein","APIData_arr","balance","i","length","contract_decimals","parseInt","Math","pow","push","contract_name","contract_ticker_symbol","toFixed","parseFloat","quote","getAPIData","map","row","key","scope","onemillionwallets","handleChange","event","setState","username","target","handleClick","console","log","state","tableData","require","config","this","onChange","placeholder","React","BottomNav","Resume","Dropdown","Toggle","Menu","Item","as","Link","Main","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.a160accb.chunk.js","sourcesContent":["import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { useMediaQuery } from 'react-responsive';\nimport { Link } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst DarkToolTip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#16213e\",\n    color: \"white\",\n    boxShadow: theme.shadows[1],\n    fontSize: 12,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"5px 0px\",\n  },\n}))(Tooltip);\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f2f0eb\",\n    color: \"black\",\n    boxShadow: theme.shadows[1],\n    fontSize: 12,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"5px 0px\",\n  },\n}))(Tooltip);\n\nexport default function SocialMedia() {\n  const darkMode = useDarkMode(false);\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 992px)'\n  })\n  if (isDesktopOrLaptop) {\n    var Component = darkMode.value ? DarkToolTip : LightTooltip;\n    return (\n      <>\n        <Component title=\"LinkedIn\">\n          <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n            <LinkedInIcon color={darkMode.value ? \"secondary\" : \"action\"}/>\n          </a>\n        </Component>\n        <Component title=\"GitHub\">\n          <a href=\"https://www.github.com/sgheidi\">\n            <GitHubIcon color={darkMode.value ? \"secondary\" : \"action\"}\n            className=\"git\"\n            />\n          </a>\n        </Component>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n      <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n        <LinkedInIcon color={darkMode.value ? \"secondary\" : \"action\"}/>\n      </a>\n      <a href=\"https://www.github.com/sgheidi\">\n        <GitHubIcon color={darkMode.value ? \"secondary\" : \"action\"}\n        className=\"git\"\n        />\n      </a>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport SocialMedia from './SocialMedia';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport { useMediaQuery } from 'react-responsive';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst DarkToolTip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#16213e\",\n    color: \"white\",\n    boxShadow: theme.shadows[1],\n    fontSize: 12,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"0px 0px\",\n  },\n}))(Tooltip);\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f2f0eb\",\n    color: \"black\",\n    boxShadow: theme.shadows[1],\n    fontSize: 12,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"0px 0px\",\n  },\n}))(Tooltip);\n\nexport default function DarkModeToggle() {\n  const darkMode = useDarkMode(false);\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 992px)'\n  })\n  if (isDesktopOrLaptop) {\n    var Component = darkMode.value ? DarkToolTip : LightTooltip;\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <Component title=\"Toggle light theme\">\n          <button type=\"button\" onClick={darkMode.disable}>\n            <WbSunnyIcon className=\"sun\"/>\n          </button>\n        </Component>\n        <Component title=\"Toggle dark theme\">\n          <button type=\"button\" onClick={darkMode.enable}>\n            <NightsStayIcon clsasName=\"moon\"/>\n          </button>\n        </Component>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon className=\"sun\"/>\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon clsasName=\"moon\"/>\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport useDarkMode from 'use-dark-mode';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Card1() {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <>\n    <div className=\"card-body\">\n    <div className=\"card-header1\">Chess Programming: A Reflection</div>\n    <p className=\"card-date1\"> July 14, 2020 &nbsp; • &nbsp; 4 min read </p>\n    Chess programming has single-handedly resulted in my skills in algorithm design, program flow and\n    implementation to be signficantly stronger. It has not only forced me to think analytically about...\n    <Link to=\"/chessprogramming\"> <br/>\n      <Button variant={darkMode.value ? \"dark\" : \"light\"}>\n        Continue reading\n      </Button>\n    </Link>\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport useDarkMode from 'use-dark-mode';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Card2() {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <>\n    <div className=\"card-body\">\n    <div className=\"card-header1\">AI Algorithms: Minimax and α-β Pruning</div>\n    <p className=\"card-date1\"> Nov. 27, 2020 &nbsp; • &nbsp; 7 min read </p>\n    Minimax, combined with the concept of α-β pruning, is at the heart of how an AI generates a\n    move in perfect, 2 player games such as connect-4, tic-tac-toe and chess. The core idea is very\n    intuitive, and...\n    <Link to=\"/ai\"> <br/>\n      <Button variant={darkMode.value ? \"dark\" : \"light\"}>\n        Continue reading\n      </Button>\n    </Link>\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport useDarkMode from 'use-dark-mode';\nimport {Link} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Card3() {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <>\n    <div className=\"card-body\">\n    <div className=\"card-header1\">An Efficient Algorithm For Counting Primes Up To N + Analysis</div>\n    <p className=\"card-date1\"> Dec. 12, 2020 &nbsp; • &nbsp; 3 min read </p>\n    Here's the problem statement: determine the number of prime numbers from 1 up\n    to an input N.\n    As we are considering efficiency here, we will be using the test case\n    of N = 10000000 (10M) to test...\n    <Link to=\"/countPrimes\"> <br/>\n      <Button variant={darkMode.value ? \"dark\" : \"light\"}>\n        Continue reading\n      </Button>\n    </Link>\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport DarkModeToggle from './DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Card1 from './Card1';\nimport Card2 from './Card2';\nimport Card3 from './Card3';\nimport {Link} from 'react-router-dom';\n\nexport default function Blog() {\n  return (\n    <>\n    <div className=\"back-blog\">\n      <Link to=\"../\">\n        <ArrowBackIosRoundedIcon color=\"secondary\" />\n      </Link>\n    </div>\n    <div className=\"cards\">\n      <Card3 />\n      <div className=\"card-divider\"/>\n      <Card2 />\n      <div className=\"card-divider-bigscreen\"/>\n      <Card1 />\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport gif from '../../media/out.gif';\nimport gif2 from '../../media/game2.gif';\nimport '../../css/projects.scss';\n\nexport default function Pychess() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> ♚ PyChess </p>\n          <p className=\"date\"> March 18, 2020 &nbsp; • &nbsp; 3 min read\n            <p className=\"github-tag\"> <a href=\"https://www.github.com/sgheidi/pychess\">\n            View on GitHub </a> </p>\n          </p>\n          <p className=\"project-body-text\">\n          PyChess has probably been the most fulfilling project I've completed up to date. It\ncombined almost every programming paradigm, coding concept, software engineering 'best practice'\nand even some math skills I had learned until now, into one project. After finishing the project,\nI not only felt my programming skills had increased dramatically, I also became more and more\ninterested about a topic I knew virtually nothing about: chess as a game itself. I realized that\nthe game is quite complicated, and that in terms of skill level, the AI I had programmed was\nnothing compared to contemporary, state-of-the-art engines such as\n<a href=\"https://stockfishchess.org/\"> Stockfish</a> and <a href=\"https://komodochess.com/\">\nKomodo</a>.\nHowever, I am still in the process of strengthening the AI's <a href=\n\"https://en.wikipedia.org/wiki/Evaluation_function\">\nevaluation function</a> so that it makes better decisions on the moves it makes. <br /><br />\n\n<div className=\"image-background\">\n<img\nsrc={gif}\nalt=\"Chess AI playing against itself\"\n/> </div>\n<p className=\"caption\"><i>  Watch my AI play against itself! </i></p>\n\nThe coolest thing about the AI is that it can constantly be updated with new code, anytime I want\nit to, or with any new idea I come up with. I wrote every line in this codebase and can apply any new\nconcept or idea and see the difference immediately. <br /><br />\n\nSome lessons I learned along the way are: good code organization practices, Python PEP-8 style\ndocstrings (for classes and functions), and applying\n<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming#\"> OOP </a> in\na real project. Before this, I, among\nmany developers, only heard about OOP in school, theory, and in 'interview' type questions.\nI have rarely used OOP in my code for work or school. However, for a project with a large codebase\nlike this, applying OOP concepts <b> signficantly </b> increased code organization which in turn\nlead to a much more understandable and less bug-prone codebase. <br /> <br />\n\nPerhaps the greatest lesson I learned from this project is the process of building and designing a\nrelatively large system from the ground up. When building something like this, one is faced with\nmany design decisions such as the program's flow of logic, which functions to encapsulate into\nclasses and keeping the code as least bug-prone as possible. I designed the codebase so that it\nis as organized and encapsulated as it can be, and made the program flow of logic as simple as\npossible, for the long term. <br /><br />\n\n<div className=\"image-background\">\n<img\nsrc={gif2}\nalt=\"Chess AI playing against itself\"\n/> </div>\n<p className=\"caption\"><i>  Round 2: Black checkmates White. </i></p>\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport gif from '../../media/out.gif'\nimport '../../css/projects.scss';\n\nexport default function UnityFPS() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> Single Player FPS Game in Unity3D</p>\n          <p className=\"date\"> Oct. 18, 2020\n            <p className=\"github-tag\"> <a href=\"https://www.github.com/sgheidi/pychess\" >\n            View on GitHub </a> </p>\n          </p>\n          <p className=\"project-body-text\">\n            Game development using Unity3D has been a very interesting experience for me, as I have\n            never used a game engine in the past and have mainly\n\n\n            . Coming from a background with\n            lower-level languages and frameworks such as C++, OpenGL and Pygame, game development\n            with Unity has been enlightening because from a programming perspective,\n            it makes a lot of things simpler to work\n            with. The whole game does not have to be programmable as like in low-level game\n            programming such as Python or OpenGL. You simply create objects in the world and\n            attach scripts, tags and properties to them, which makes the whole process significantly\n            easier, from debugging, to orgnization, to presentation.\n\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport gif from '../../media/tetris.gif'\nimport '../../css/projects.scss';\n\nexport default function TetrisFriends() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> 🕹️&nbsp;Tetris Friends </p>\n          <p className=\"date\"> Feb. 10, 2020 &nbsp; • &nbsp; 4 min read\n            <p className=\"github-tag\"> <a href=\"https://www.github.com/sgheidi/tetrisfriends\">\n            View on GitHub </a> </p>\n          </p>\n          <p className=\"project-body-text\">\nDeveloping a tetris friends clone was one of my first projects in game development and gave me the\nthe gist of how games work such as the usual flow of logic, the event loop for drawing elements\nonto the window, and how the coding is done behind all of this. The frameworks used were OpenGL and\nGLFW. There are many debates on whether a beginner should start with a lower level API (such as\nOpenGL) or a higher level library such as SFML or Pygame. My stance on this is that a beginner should\nstart with a higher-level one since it gives them a better understanding of how everything works,\nand then they can transition to learning lower-level API's to further their understanding.\n\n\n<br /><br />\n<div className=\"image-background\">\n<img\nsrc={gif}\nalt=\"Tetris Friends\"\n/> </div>\n<p className=\"caption\"><i>  Tetris Friends demo. </i></p>\n\nHowever, with the debate on frameworks aside, this was actually originally a school project\nmeant to be a mixture of tetris and falling fruits, which I later decided to transform into a game I\noften used to play: tetris friends.\n<p className=\"inner-header\"> Game Features </p>\n\nThe features of the game, similar to the original, include:\n<li>\n'Holding pieces'. Press shift to 'hold' a piece to use later. Press again to activate held\npiece.\n</li>\n<li>\nAbility to see the next 4 pieces. This makes it much faster to play with, as you know what's coming up\nnext.\n</li>\n<li>\nHard-dropping by using 'space' key.\n</li>\n<li>\nSeeing a shaded outline of where the piece would fall if hard-dropped.\n</li>\n<li>\nClearing lines. Standard line-clearing algorithm.\n</li>\n<li>\nResetting, pausing, quitting the game (keys R, P, Q). Easy and instant.\n</li>\n<li>\nDifficulty increases as you clear more lines!\n</li> <br/>\nAs a retrospective, this game was very difficult to develop at first for 2 big reasons:<br/><br/> 1)\nIt was my very first\ngame and I had no clue how games actually worked, what event loops were and how they're coded.\nI had to wrap my head around using functions effectively and how the game should be structured.\n<br/> 2) Using a low-level API for a first-time project. I highly recommend against this because of the steep\nlearning curve for beginners. I didn't know the basics and was getting overwhelmed by OpenGL's low-level\nsyntax. <br/> <br/>\n\nFor anyone wanting to get started with a project such as this, I would recommend using a library such\nas SFML (C++) or Pygame (Python), in order to understand the basics, and create a simple game with\nthose instead before learning OpenGL.\n\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport img from '../../media/ChessProgramming.jpg';\nimport pin from '../../media/pin.png';\nimport '../../css/projects.scss';\n\nexport default function ChessProgramming() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> ♟️ Chess Programming: A Reflection </p>\n          <p className=\"date\"> Jul. 14, 2020 &nbsp; • &nbsp; 4 min read\n          </p>\n          <p className=\"project-body-text\">\nChess programming has single-handedly resulted in my skills in algorithm design, program flow and\nimplementation to be signficantly stronger. It has not only forced me to think analytically about\nsomething that seems relatively straight-forward, it made me use important concepts\nsuch as stacks, queues, trees, recursion, maps, threads, OOP, inheritance, scoping and\nnamespaces (i.e in C++) and other good coding practices. The most fun part of chess programming is\nbuilding your own chess AI that does exactly what you code it to do (this is done using\n<a href=\"https://en.wikipedia.org/wiki/Evaluation_function\"> evaluation functions</a>).\nThe process of building a large system from scratch can at first seem daunting,\nbut once you really get into it, it can become quite fun, especially strengthening\nthe AI. <br /><br/>\n\n<div className=\"image-background\">\n<img\nsrc={img}\nalt=\"Computer chess\"\n/> </div>\n<p className=\"caption\"><i>  The chess board. </i></p>\n\nAn example of a crucial design choice I had to make for implementing the full game rules of chess was\ncoding a\n<a href=\"https://en.wikipedia.org/wiki/Pin_(chess)\"> pin</a>.\nFrom Wikipedia, a pin in chess '<i>is a situation brought on by an attacking piece in which a\ndefending piece cannot move without exposing a more valuable defending piece on its other side to\ncapture by the attacking piece.</i>' The following image describes the situation quite well: <br/><br/>\n\n<div className=\"image-background\">\n<img\nsrc={pin}\nalt=\"Chess pin\"\n/> </div>\n<p className=\"caption\"><i>  The black queen is about to be pinned by the white bishop. </i></p>\n\nPins are a fundamental game rule in chess. My approach, in pseudocode, is the following: <br/><br/>\n\n<div class=\"pseudocode\">\n  {\"/* this function should be called anytime Piece moves */\\n\"}\n  {\"void Piece::check_pin() { /* note that Piece can be any of B, R, Q */\\n\"}\n  {\"  for (i=0;i<piece_count;i++) {\\n\"}\n  {\"    if (alive[i]) {\\n\"}\n  {\"      if (king_in_path(i) and num_pieces_between(i) == 1)\\n\"}\n  {\"        pin(i, get_pinned_piece(i))\\n\"}\n  {\"    }\\n\"}\n  {\"  }\\n\"}\n  {\"}\\n\"}\n</div>\n\n<br/>\nThe algorithm is very simple, and literally translates to plain English as, for say, a bishop:\nif it is alive and the king is in its path and the number of (opposite-colored) pieces between\nthe king and itself is 1, pin that piece. The sub-functions are also pretty self-explanatory, and all\nthe <div className=\"code\">pin</div> function really does is just filter the pinned piece's movelist with\nthe pinner's (the bishop in this case) movelist spanning from the pinner's position to the opposing\nking's position.<br/><br/>\n\nI am sure there are better and more efficient ways for this implementation (as with everything),\nbut my approach works well in all situations I've tested. The actual C++ implementation of the above\ncan be found\n<a href=\"https://github.com/sgheidi/FastChess/blob/master/src/core/black/bishop.cc#L33\"> here</a>.\n\n<p className=\"inner-header\"> Notable challenges </p>\nBy far the most challenging problem in chess programming for me has been debugging the AI.\nThe AI, even at\na mere depth of 3, can search thousands of positions for a single move and if something goes wrong\nin the search, be it a bug with enpassant or some weird corner case I've forgetten about, I would have\nto search the logs (i.e the positions it has searched for) and see where the bug occured. This can\nbe a very tedious process. <br/> <br/>\n\nTo make this a bit easier for myself, I made different flags for testing purposes\n(i.e <div className=\"code\">#define DEBUGAI</div> in C++) and saved all the moves that the AI searched for\nin a file named <div className=\"code\">debug.log</div>. Here, I could see every move that the AI\nconsidered, and I would see the last set of moves that it made before a segmentation fault happened.\n<br/><br/>\n\nAnother challenge was checking whether the AI would make the correct decisions in certain circumstances.\nTo avoid playing it from the beginning every time, I built several different testing environments\nwith specific board orientations to see how the AI would play. This is still a work in progress.\n\n\n</p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport sieve from '../../media/sieve.gif';\nimport plt from '../../media/plt.png';\nimport '../../css/projects.scss';\n\nexport default function primes() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> 📜&nbsp;An Efficient Algorithm For Counting Primes Up To N + Analysis </p>\n          <p className=\"date\"> Dec. 12, 2020 &nbsp; • &nbsp; 3 min read\n          </p>\n          <p className=\"project-body-text\">\nHere's the problem statement: determine the number of prime numbers from 1 up\nto an input <div className=\"code\"> N </div>.\nAs we are considering efficiency here, we will be using the test case\nof <div className=\"code\"> N = 10000000 </div> (10M) to test the algorithm's runtime.\nWhen faced with this problem, the first solution one might come up with is using a\nnested <div className=\"code\">for </div> loop and checking with the modulo operator whether each number\nin <div className=\"code\">[1, N] </div> is composite or not\n(recall that a number <div className=\"code\">i </div> is composite if there exists\na number <div className=\"code\">j </div> in the\nrange <div className=\"code\">[2, i] </div> such that <div className=\"code\">i % j == 0 </div>).\nHere is the pseudocode for this approach: <br/><br/>\n<div class=\"pseudocode\">\n{\"int countPrimes(int n):\\n\"}\n{\"  total = 0\\n\"}\n{\"  for i in range(2, n):\\n\"}\n{\"    prime = true\\n\"}\n{\"    for j in range(sqrt(i)):\\n\"}\n{\"      if i % j == 0:\\n\"}\n{\"        prime = false\\n\"}\n{\"        break\\n\"}\n{\"    if prime: total += 1\\n\"}\n{\"  return total\\n\"}\n</div>\n<p className=\"caption\">\nNote that we only need to iterate until sqrt(i) inside the inner loop.\n</p>\nThis approach works, but is very inefficient, even with our optimization of iterating\nuntil <div className=\"code\"> sqrt(i) </div> inside the inner loop. It takes too long to run\non <div className=\"code\"> N = 100000</div>, let alone our\ncriteria of <div className=\"code\"> N = 10000000 </div>. Now let's think about why this algorithm\nis so inefficient... The above code is starting at 2 and checking <i>every</i> number\nuntil <div className=\"code\">N</div>. Do we really need to\ncheck <div className=\"code\">4, 6, 8, 10, 12,...</div>? We need a way to\nmark these multiples of 2, because we know for sure that these are not prime. We also need to\nmark the multiples of 3 i.e <div className=\"code\">6, 9, 12, 15, 18,...</div> and\n5: <div className=\"code\">10, 15, 20, 25, 30,...</div>, and so on, which\nbrings us to the efficient algorithm.\n\n<p className=\"inner-header\"> The Sieve of Eratosthenes </p>\nIt turns out that this is actually an ancient problem and was solved by the Greek\nmathematican Eratosthenes thousands of years ago. The\nalgorithm does exactly what we were doing above: mark each prime number's multiples as composite\nso that we are left with only non-composite numbers, i.e the primes, hence the word\n'sieve'. Here's the pseudocode for\nthe algorithm: <br/><br/>\n\n<div class=\"pseudocode\">\n{\"int countPrimes(int n):\\n\"}\n{\"  /* we initalize all values in our array to 1 (prime) and will be setting all composites to 0 */\\n\"}\n{\"  primeArray = [1]*n\\n\"}\n{\"  for i in range(2, sqrt(n)):\\n\"}\n{\"    if primeArray[i] == 1:\\n\"}\n{\"      for j in range(i*2, n, i):\\n\"}\n{\"        primeArray[j] = 0\\n\"}\n{\"  now count all 1's in primeArray[], and return this value\\n\"}\n\n</div>\n<p className=\"caption\">\nThis algorithm is extremely fast and calculates primes for n = 10000000 in ~2.5 seconds.\n</p>\n\n<p className=\"inner-header\"> Further Analysis</p>\nSo now that we have come up with an efficient algorithm capable of calculating primes up\nto <div className=\"code\"> N = 10000000 </div> within\nseconds, let's put it to the test and visualize what the distribution of the number of primes up\nto N really looks like:<br/><br/>\n\n<div id=\"image-background2\">\n<img className=\"img2\"\nsrc={plt}\nalt=\"Plot of countPrimes(n) vs. n\"\n/>\n</div>\n<p className=\"caption\"><i> Visualization of n vs. countPrimes(n). </i></p>\nThe <a href=\"https://en.wikipedia.org/wiki/Prime_number_theorem\"> prime number theorem </a> states\nthat the distribution of primes is given by the prime-counting\nfunction <div className=\"code\"> π(N) = N/log(n)</div>, which looks very similar to the above, as\nexpected.\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport gif from '../../media/out.gif'\nimport '../../css/projects.scss';\n\nexport default function lc() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> LeetCode Problems I've Encountered In Actual Interviews  </p>\n          <p className=\"date\"> Dec. 30, 2020 &nbsp; • &nbsp; 5 min read\n          </p>\n          <p className=\"project-body-text\">\nThis blog is mainly to track my own progress & compare questions I've gotten with the ones I have\npractice with, so the list will be growing.\nisAnagram(s1, s2), isPalindrome of messy string, reverse string in place, bool duplicates in string,\nbool target sum of 2 numbers exists in array.\n<br/><br/>\n<p className=\"inner-header\"> Other questions </p>\nOther common interview questions include:\n<li> Difference between synchronous & asynchronous</li>\n<li> What does Ajax stand for (the web framework)</li>\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport img from '../../media/minimax.png';\nimport nn from '../../media/nn.png';\nimport dfs from '../../media/dfs.png'\nimport '../../css/projects.scss';\n\nexport default function AI() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> 🤖&nbsp;AI Algorithms: Minimax and α-β Pruning </p>\n          <p className=\"date\"> Nov. 27, 2020 &nbsp; • &nbsp; 7 min read\n          </p>\n          <p className=\"project-body-text\">\nMinimax, combined with the concept of α-β pruning, is at the heart of how an AI generates a\nmove in perfect, 2 player games such as connect-4, tic-tac-toe and chess. The core idea is very\nintuitive, and these algorithms, when used\ntogether are known as 'semi-brute force' methods of traversing the game tree up to a\ndepth <div className=\"code\"> d</div> and generating a move. The idea is simple and is how top chess\nplayers think about the game: Pick a move at random and see 'what happens' if that move is played.\nThat is, in human terms, see if a good position comes out of it. In computer terms, this is known\nas an <a href=\"https://en.wikipedia.org/wiki/Evaluation_function\"> evaluation function</a>,\nwhich all modern chess engines employ. The computer evaluates how good\nthe position is via its evaluation function, undoes\nthat move, and moves on to the next moves until it has traversed all nodes of the game tree up to a\ndepth <div className=\"code\"> d</div>.\n<br/><br/>\n\n<div className=\"image-background\">\n<img\nsrc={img}\nalt=\"Minimax\"\n/> </div>\n<p className=\"caption\"><i> Image illustrating the game 'tree' data structure which\nthe minimax algorithm refers to. The nodes with numbers represent the static evaluation at each\nposition.\n</i></p>\n\nFinally, it chooses the move with the best evaluation as the move to make. Another\nslight variation for doing the above is creating a copy of the board at each position and evaluating\nthe copy, to avoid the undo. This is the pure minimax approach of traversing all nodes, and it would\nimply take too long to search all positions, even at a low depth. An optimization of this, which α-β\npruning uses, is to notice that not all nodes of the game tree need to be searched. That is, if you\nknow a given move leads to a position worse than the current, you do not need to search any further\npositions. These entire subtrees can be discarded, which is known as <i>pruning</i>.\nPseudocode for minimax with α-β pruning is shown below: <br/><br/>\n\n<div class=\"pseudocode\">\n  {\"  initialize best_move dict to {'score': -9999, 'piece': '', 'pos': ''}, depth n to 5  \\n\"}\n  {\"  for i in black_moves:\\n\"}\n  {\"    for k in ith black piece's moves:\\n\"}\n  {\"      move black piece i to position k\\n\"}\n  {\"      score = minimax(depth=n, alpha=-10000, beta=10000, player=White)\\n\"}\n  {\"      undo the move\\n\"}\n  {\"      if score > best_move['score']:\\n\"}\n  {\"        best_move['score'] = score\\n\"}\n  {\"        best_move['piece'] = piece\\n\"}\n  {\"        best_move['pos'] = pos\\n\"}\n  {\"  /* the AI move /*\\n\"}\n  {\"  move(piece=best_move['piece'], pos=best_move['pos'])\\n\"}\n  {\"\\n\\n\"}\n  {\"/* the main recursive function which returns the static evaluation as the base case. */\\n\"}\n  {\"float minimax(depth, alpha, beta, player):\\n\"}\n  {\"   if depth == 0: \\n\"}\n  {\"     return -eval_pos(): \\n\"}\n  {\"  /* the 'minimizing' player. */\\n\"}\n  {\"  if player == Black:\\n\"}\n  {\"    best_move = -9999\\n\"}\n  {\"    for i in black_moves:\\n\"}\n  {\"      for k in ith black piece's moves:\\n\"}\n  {\"        /* the recursive call */\\n\"}\n  {\"        best_move = max(best_move, minimax(n-1, alpha, beta, White))\\n\"}\n  {\"        undo the move\\n\"}\n  {\"        alpha = max(alpha, best_move)\\n\"}\n  {\"        /* pruning */\\n\"}\n  {\"        if alpha >= beta:\\n\"}\n  {\"          return best_move\\n\"}\n  {\"  /* the 'maximizing' player. */\\n\"}\n  {\"  else if player == White:\\n\"}\n  {\"    best_move = 9999\\n\"}\n  {\"    for i in white_moves:\\n\"}\n  {\"      for k in ith white piece's moves:\\n\"}\n  {\"        /* the recursive call */\\n\"}\n  {\"        best_move = min(best_move, minimax(n-1, alpha, beta, Black))\\n\"}\n  {\"        undo the move\\n\"}\n  {\"        beta = min(beta, best_move)\\n\"}\n  {\"        /* pruning */\\n\"}\n  {\"        if alpha >= beta:\\n\"}\n  {\"          return best_move\\n\"}\n</div>\n<p className=\"caption\"><i>\nPseudocode for minimax and alpha-beta pruning tree search for perfect, 2-player games.\nFor a complete C++ chess implementation\nsee\n<a href=\"https://github.com/sgheidi/FastChess/blob/master/src/ai/black/search.cc#L4\"> here</a>.\n</i></p>\n<div className=\"image-background\">\n<img\nsrc={dfs}\nalt=\"Depth-first\"\n/> </div>\n<p className=\"caption\"><i> It should also be noted that the tree nodes are visited depth-first\n(i.e traverses the deepest nodes first), as shown\nabove.\n</i></p>\nHowever, this algorithm has flaws and can lead to problems such as the\n<a href=\"https://en.wikipedia.org/wiki/Horizon_effect\"> horizon effect</a>,\nand also situations where the next move 'seems' to be worse, but actually becomes better,\nafter more moves. This is a real problem with traditional AI's, which prune subtrees\nthat it thinks are bad for it but are actually not (this can be caused by slight inaccuracies in the\nevaluation function). Neural network-based AI's seem to avoid\nthese problems, which brings us to the next section. <br/>\n\n<p className=\"inner-header\"> Neural Network Move Generation </p>\nWith new advances made to machine learning (specifically, deep reinforcement learning), neural\nnetwork chess has been steadily rising since 2018, when the AI company DeepMind released the\nneural network chess entity known\nas <a href = \"https://en.wikipedia.org/wiki/AlphaZero\">AlphaZero</a>, which reached a skill level\ncomparable to Komodo and\nStockfish in just 4 hours of training and was able to beat Stockfish 8 - the then strongest\nchess engine - in most of their matches. This is despite the fact that Stockfish searched more than\n80 million nodes/s (!!) vs. AlphaZero's 80000 nodes/s.\n<a href=\"https://en.wikipedia.org/wiki/Leela_Chess_Zero\"> Leela Chess Zero</a> and\n<a href=\"https://www.chessprogramming.org/Stockfish_NNUE\"> Stockfish NNUE </a>\n(which uses an <a href=\"https://en.wikipedia.org/wiki/Efficiently_updatable_neural_network\">\nefficiently updatable neural network</a>)\nare other\nexamples of neural-network based AI's. <br/> <br/>\n\n<div className=\"image-background\">\n<img\nsrc={nn}\nalt=\"Neural network\"\n/> </div>\n<p className=\"caption\"><i> A basic neural network. </i></p>\n\nInstead of a conventional alpha-beta search of the game tree, the neural network AI still\nsearches the game tree (as humans as and traditional engines do) but instead uses its\ntrained neural network to evaluate the board positions it encounters\nin its search. This neural network\nis continuously trained and updated by an unsupervised learning method known as <i>self-play</i>, where\nit plays matches against another version\nof itself, and the stronger one is updated as the new network.\nDoing this causes the search speed and depth to decrease dramatically\n(see <a href = \"https://www.chessprogramming.org/Stockfish_NNUE\">here</a>)\nbut also leads to substantial increases in skill level. The playing style is completely\ntransformed from\none of rigid, pure calculative and theory-based to more strategic, positional and 'human-like'.\nAn interesting characteristic of neural network chess AI's is that they often sacrifice\nimportant pieces in bizarre and seemingly random positions, whereas traditional engines only\nseldom do this.\n<br/> <br/>\nAnother popular method for neural network move generation is through a supervised learning pipeline,\nwhere the AI continuously updates its network by analyzing top engine or grandmaster games\nfrom a large database. The AI’s\nplaying style would be similar to the set of games it is trained on.\n<a href=\"https://chessengines.blogspot.com/2019/11/chess-engine-leelenstein-925.html\"> Leelenstein </a>\nis an example of this.\n\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport img from '../../media/ChessProgramming.jpg';\nimport pin from '../../media/pin.png';\nimport '../../css/projects.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst APIData =\n[\n  {\n    \"contract_decimals\": 18,\n    \"contract_name\": \"Ether\",\n    \"contract_ticker_symbol\": \"ETH\",\n    \"contract_address\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n    \"logo_url\": \"https://logos.covalenthq.com/tokens/0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.png\",\n    \"type\": \"cryptocurrency\",\n    \"balance\": \"4628139000000000\",\n    \"quote_rate\": 1098.3284,\n    \"quote\": 5.0832167,\n    \"nft_data\": null\n  },\n  {\n    \"contract_decimals\": 18,\n    \"contract_name\": \"Streamr DATAcoin\",\n    \"contract_ticker_symbol\": \"DATA\",\n    \"contract_address\": \"0x0cf0ee63788a0849fe5297f3407f701e122cc023\",\n    \"logo_url\": \"https://logos.covalenthq.com/tokens/0x0cf0ee63788a0849fe5297f3407f701e122cc023.png\",\n    \"type\": \"cryptocurrency\",\n    \"balance\": \"15093470568001128856\",\n    \"quote_rate\": 0.04035126,\n    \"quote\": 0.60904056,\n    \"nft_data\": null\n  },\n  {\n    \"contract_decimals\": 8,\n    \"contract_name\": \"arbiswap\",\n    \"contract_ticker_symbol\": \"aswap\",\n    \"contract_address\": \"0xad0887734461af8c6033068bde4047dbe84074cc\",\n    \"logo_url\": \"https://logos.covalenthq.com/tokens/0xad0887734461af8c6033068bde4047dbe84074cc.png\",\n    \"type\": \"cryptocurrency\",\n    \"balance\": \"68611802827\",\n    \"quote_rate\": 0.0007459897,\n    \"quote\": 0.51183695,\n    \"nft_data\": null\n  },\n  {\n    \"contract_decimals\": 18,\n    \"contract_name\": \"BeforeCoinMarketCap\",\n    \"contract_ticker_symbol\": \"BCMC1\",\n    \"contract_address\": \"0xd5e2a54fef5f9e4a6b21ec646bbed7a160a00f18\",\n    \"logo_url\": \"https://logos.covalenthq.com/tokens/0xd5e2a54fef5f9e4a6b21ec646bbed7a160a00f18.png\",\n    \"type\": \"cryptocurrency\",\n    \"balance\": \"1050000000000000000000\",\n    \"quote_rate\": 0,\n    \"quote\": 0,\n    \"nft_data\": null\n  },\n  {\n    \"contract_decimals\": 6,\n    \"contract_name\": \"Tether USD\",\n    \"contract_ticker_symbol\": \"USDT\",\n    \"contract_address\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n    \"logo_url\": \"https://logos.covalenthq.com/tokens/0xdac17f958d2ee523a2206206994597c13d831ec7.png\",\n    \"type\": \"dust\",\n    \"balance\": \"0\",\n    \"quote_rate\": 1.0148851,\n    \"quote\": 0,\n    \"nft_data\": null\n  }\n]\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n// make this a function, takes in api data, outputs rows\nfunction getAPIData() {\n  var APIData_arr = [];\n  var balance = 0;\n  for (var i=0;i<APIData.length;i++) {\n    if (APIData[i].contract_decimals > 0) {\n            balance = parseInt(APIData[i].balance) / Math.pow(10, APIData[i].contract_decimals);\n        } else {\n            balance = parseInt(APIData[i].balance);\n        }\n    APIData_arr.push(createData(\n    APIData[i].contract_name,\n    APIData[i].contract_ticker_symbol,\n    balance.toFixed(4),\n    parseFloat(APIData[i].quote).toFixed(2),\n    APIData[i].type));\n  }\n  return APIData_arr;\n}\n\nfunction TableComponent(props) {\n  const showTable = props.showTable;\n  const classes = useStyles();\n  if (!showTable) return <></>;\n  return (\n    <>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Token</TableCell>\n            <TableCell align=\"right\">Symbol</TableCell>\n            <TableCell align=\"right\">Balance&nbsp;</TableCell>\n            <TableCell align=\"right\">Fiat Value&nbsp;</TableCell>\n            <TableCell align=\"right\">Type&nbsp;</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {getAPIData().map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer> <br/> <br/>\n    </>\n  )\n}\n\nexport default class onemillionwallets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', showTable: false, tableData: null};\n    require('dotenv').config();\n  }\n  handleChange = (event) => {\n    this.setState({username: event.target.value});\n  }\n  handleClick = () => {\n    for (var i=0;i<APIData.length;i++) {\n      console.log(APIData[i]);\n    };\n    this.setState({showTable: true});\n    // const APIKEY = this.REACT_APP_API_KEY;\n    // const address = this.state.username;\n    // const url = new URL(`https://api.covalenthq.com/v1/1/address/${address}/balances_v2`);\n    // url.search = new URLSearchParams({\n    //     key: APIKEY\n    // })\n    // fetch(url)\n    // .then((resp) => resp.json())\n    // .then(function(data) {\n    //     let tokens = data.data.items;\n    //   })\n  }\n  render() {\n    const showTable = this.state.showTable;\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> 💰 My E-Wallet </p>\n          <p className=\"date\"> Jan. 4, 2021 &nbsp; • &nbsp; 5 min read\n          </p>\n      Powered by\n      <img\n      id=\"covalent\"\n      src=\"https://www.covalenthq.com/static/images/covalent-logo.png\"\n      /> <br/><br/>\n      <input\n      type=\"text\"\n      onChange={ this.handleChange }\n      placeholder=\"Enter wallet address or ENS\"\n      /> &emsp;\n        <input\n          type=\"button\"\n          value=\"Get balance\"\n          onClick={this.handleClick}\n        /> <br/> <br/>\n      <TableComponent showTable={this.state.showTable} />\n      </div>\n    </>\n  );\n}\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport Resume from '../media/resume.pdf';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useMediaQuery } from 'react-responsive';\nimport {Link} from 'react-router-dom';\n\nexport default function BottomNav() {\n  const darkMode = useDarkMode(false);\n  return (\n    <div className=\"bottom-nav\">\n      <Button href={Resume} variant={darkMode.value ? \"dark\" : \"light\"}>\n      CV&nbsp; 💼\n      </Button> <div className=\"bottom-nav-divider\"/>\n      <Dropdown>\n        <Dropdown.Toggle variant={darkMode.value ? \"dark\" : \"light\"}>\n          Projects&nbsp; 📝\n        </Dropdown.Toggle>\n        <Dropdown.Menu className={darkMode.value ? \"dropdown-dark\" : \"dropdown-light\"}>\n          <Dropdown.Item as={Link} to=\"/pychess\"\n          className=\"dropdown-item\">PyChess</Dropdown.Item>\n          <Dropdown.Item as={Link} to=\"/tetrisfriends\"\n          className=\"dropdown-item\">TetrisFriends</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown> <div className=\"bottom-nav-divider\"/>\n      <Link to=\"/blog\">\n        <Button variant={darkMode.value ? \"dark\" : \"light\"}>\n          Blog&nbsp; 💻\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport DarkModeToggle from './DarkModeToggle';\nimport Card1 from './Card1';\nimport Card2 from './Card2';\nimport Card3 from './Card3';\nimport BottomNav from './BottomNav';\nimport Test from './Test';\nimport useDarkMode from 'use-dark-mode';\nimport {Link} from 'react-router-dom';\nimport '../css/styles.scss';\nimport '../css/breakpoints/mobile.scss';\nimport '../css/breakpoints/tablet.scss';\nimport '../css/breakpoints/smallscreen.scss';\nimport '../css/breakpoints/bigscreen.scss';\nimport '../css/scroller.scss';\nimport '../css/theme.scss';\n\nexport default function Main()  {\n  return (\n    <>\n      <BottomNav />\n      <div className=\"cards\">\n        <Card3 />\n        <div className=\"card-divider\"/>\n        <Card2 />\n        <div className=\"card-divider-bigscreen\"/>\n        <Card1 />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport Blog from './components/Blog';\nimport Pychess from './components/proj/Pychess';\nimport UnityFPS from './components/proj/UnityFPS';\nimport TetrisFriends from './components/proj/TetrisFriends';\nimport ChessProgramming from './components/blogs/ChessProgramming';\nimport primes from './components/blogs/primes';\nimport lc from './components/blogs/lc';\nimport AI from './components/blogs/AI';\nimport onemillionwallets from './components/blogs/onemillionwallets';\nimport DarkModeToggle from './components/DarkModeToggle';\nimport Main from './components/Main';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <>\n      <Router>\n        <div className=\"navbar\">\n          <div className=\"name\">\n            <a href=\"/\"><b>shervan gheidi ☕ </b></a>\n          </div>\n          <DarkModeToggle />\n        </div>\n        <Switch>\n          <Route path=\"/blog\" exact component={Blog} />\n          <Route path=\"/pychess\" exact component={Pychess} />\n          <Route path=\"/unityfps\" exact component={UnityFPS} />\n          <Route path=\"/ChessProgramming\" exact component={ChessProgramming} />\n          <Route path=\"/TetrisFriends\" exact component={TetrisFriends} />\n          <Route path=\"/AI\" exact component={AI} />\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/countPrimes\" exact component={primes} />\n          <Route path=\"/lc\" exact component={lc} />\n          <Route path=\"/onemillionwallets\" exact component={onemillionwallets} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/out.a8a49421.gif\";","module.exports = __webpack_public_path__ + \"static/media/ChessProgramming.ea951710.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pin.68f67dd5.png\";","module.exports = __webpack_public_path__ + \"static/media/game2.727b9a79.gif\";","module.exports = __webpack_public_path__ + \"static/media/tetris.1c460e76.gif\";","module.exports = __webpack_public_path__ + \"static/media/plt.41641ba3.png\";","module.exports = __webpack_public_path__ + \"static/media/minimax.3d559e27.png\";","module.exports = __webpack_public_path__ + \"static/media/nn.b9bfa27d.png\";","module.exports = __webpack_public_path__ + \"static/media/dfs.dcabc842.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.c93e21fd.pdf\";","module.exports = __webpack_public_path__ + \"static/media/sieve.6420e348.gif\";"],"sourceRoot":""}
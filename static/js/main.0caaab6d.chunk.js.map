{"version":3,"sources":["media/resume.pdf","media/out.gif","components/SocialMedia.js","components/DarkModeToggle.js","components/Card.js","components/Blog1.js","components/Pychess.js","components/BottomNav.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","link_icon","fontSize","git_icon","git_992","link_992","git_688_992","link_688_992","DarkToolTip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","shadows","marginBottom","tooltipPlacementBottom","margin","Tooltip","LightTooltip","SocialMedia","darkMode","useDarkMode","bp992","useMediaQuery","query","bp688_992","Component","value","title","href","style","sun","moon","sun_688_992","moon_688_992","DarkModeToggle","className","type","onClick","disable","enable","makeStyles","root_black","maxWidth","background","root_white","button_black","padding","button_white","Blog1","Pychess","to","src","gif","alt","BottomNav","Resume","variant","Dropdown","Toggle","Menu","Item","as","Link","drop","Main","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,sXCSrCC,EAAY,CAChBC,SAAU,SAGNC,EAAW,CACfD,SAAU,SAINE,EAAU,CACdF,SAAU,MAGNG,EAAW,CACfH,SAAU,MAGNI,EAAc,CAClBJ,SAAU,SAGNK,EAAe,CACnBL,SAAU,SAGNM,EAAcC,aAAW,SAACC,GAAD,MAAY,CACzCC,QAAS,CACPC,gBAAiB,UACjBC,MAAO,QACPC,UAAWJ,EAAMK,QAAQ,GACzBb,SAAU,GACVc,aAAc,QAEhBC,uBAAwB,CACtBC,OAAQ,cATQT,CAWhBU,KAEEC,EAAeX,aAAW,SAACC,GAAD,MAAY,CAC1CC,QAAS,CACPC,gBAAiB,QACjBC,MAAO,QACPC,UAAWJ,EAAMK,QAAQ,GACzBb,SAAU,GACVc,aAAc,QAEhBC,uBAAwB,CACtBC,OAAQ,cATST,CAWjBU,KAEW,SAASE,IACtB,IAAMC,EAAWC,aAAY,GACvBC,EAAQC,wBAAc,CACxBC,MAAO,8BAELC,EAAYF,wBAAc,CAC5BC,MAAO,qDAEX,GAAIF,EAAO,CACT,IAAII,EAAYN,EAASO,MAAQrB,EAAcY,EAC/C,OACE,oCACE,kBAACQ,EAAD,CAAWE,MAAM,YACf,uBAAGC,KAAK,+CACN,kBAAC,IAAD,CAAclB,MAAOS,EAASO,MAAQ,YAAc,SAAUG,MAAO3B,MAGzE,kBAACuB,EAAD,CAAWE,MAAM,UACf,uBAAGC,KAAK,kCACN,kBAAC,IAAD,CAAYlB,MAAOS,EAASO,MAAQ,YAAc,SAAUG,MAAO5B,OAMxE,OAAIuB,EAEL,oCACE,uBAAGI,KAAK,+CACN,kBAAC,IAAD,CAAclB,MAAOS,EAASO,MAAQ,YAAc,SAAUG,MAAOzB,KAEvE,uBAAGwB,KAAK,kCACN,kBAAC,IAAD,CAAYlB,MAAOS,EAASO,MAAQ,YAAc,SAAUG,MAAO1B,MAOrE,oCACE,uBAAGyB,KAAK,+CACN,kBAAC,IAAD,CAAclB,MAAOS,EAASO,MAAQ,YAAc,SAAUG,MAAO/B,KAEvE,uBAAG8B,KAAK,kCACN,kBAAC,IAAD,CAAYlB,MAAOS,EAASO,MAAQ,YAAc,SAAUG,MAAO7B,M,sCC/FzE8B,EAAM,CACV/B,SAAU,SAENgC,EAAO,CACXhC,SAAU,SAQNiC,EAAc,CAClBjC,SAAU,OAENkC,EAAe,CACnBlC,SAAU,OAGNM,EAAcC,aAAW,SAACC,GAAD,MAAY,CACzCC,QAAS,CACPC,gBAAiB,UACjBC,MAAO,QACPC,UAAWJ,EAAMK,QAAQ,GACzBb,SAAU,GACVc,aAAc,QAEhBC,uBAAwB,CACtBC,OAAQ,cATQT,CAWhBU,KAEEC,EAAeX,aAAW,SAACC,GAAD,MAAY,CAC1CC,QAAS,CACPC,gBAAiB,QACjBC,MAAO,QACPC,UAAWJ,EAAMK,QAAQ,GACzBb,SAAU,GACVc,aAAc,QAEhBC,uBAAwB,CACtBC,OAAQ,cATST,CAWjBU,KAEW,SAASkB,IACtB,IAAMb,EAAQC,wBAAc,CACxBC,MAAO,8BAELC,EAAYF,wBAAc,CAC5BC,MAAO,qDAELJ,EAAWC,aAAY,GAC7B,GAAIC,EAAO,CACT,IAAII,EAAYN,EAASO,MAAQrB,EAAcY,EAC/C,OACE,yBAAKkB,UAAU,oBACb,kBAACjB,EAAD,MACA,kBAACO,EAAD,CAAWE,MAAM,sBACf,4BAAQS,KAAK,SAASC,QAASlB,EAASmB,SACtC,kBAAC,IAAD,QAGJ,kBAACb,EAAD,CAAWE,MAAM,qBACf,4BAAQS,KAAK,SAASC,QAASlB,EAASoB,QACtC,kBAAC,IAAD,SAML,OAAIf,EAEL,yBAAKW,UAAU,oBACb,kBAACjB,EAAD,MACA,4BAAQkB,KAAK,SAASC,QAASlB,EAASmB,SACtC,kBAAC,IAAD,CAAaT,MAAOG,KAEtB,4BAAQI,KAAK,SAASC,QAASlB,EAASoB,QACtC,kBAAC,IAAD,CAAgBV,MAAOI,MAO3B,yBAAKE,UAAU,oBACb,kBAACjB,EAAD,MACA,4BAAQkB,KAAK,SAASC,QAASlB,EAASmB,SACtC,kBAAC,IAAD,CAAaT,MAAOC,KAEtB,4BAAQM,KAAK,SAASC,QAASlB,EAASoB,QACtC,kBAAC,IAAD,CAAgBV,MAAOE,M,uDC1FfS,YAAW,CAC3BC,WAAY,CACVC,SAAU,IACVC,WAAY,UACZhC,UAAW,kCACXD,MAAO,QACPX,SAAU,QAEZ6C,WAAY,CACVF,SAAU,IACVC,WAAY,UACZhC,UAAW,kCACXD,MAAO,QACPX,SAAU,QAEZ8C,aAAc,CACZC,QAAS,YACTpC,MAAO,OAETqC,aAAc,CACZD,QAAS,YACTpC,MAAO,WC1BI,SAASsC,IACtB,OACE,oCACE,yBAAKb,UAAU,qB,oDCAN,SAASc,IACtB,OACE,oCACE,yBAAKd,UAAU,QACb,kBAAC,IAAD,CAAMe,GAAG,OACP,kBAAC,IAAD,CAAyBxC,MAAM,gBAGnC,yBAAKyB,UAAU,gBACb,uBAAGA,UAAU,kBAAb,aACE,uBAAGA,UAAU,QAAb,iBACE,uBAAGA,UAAU,cAAb,IAA2B,uBAAGP,KAAK,0CAAR,mBAA3B,MAGF,uBAAGO,UAAU,qBAAb,wnBAaA,uBAAGP,KAAK,+BAAR,cAbA,OAcA,uBAAGA,KAAK,4BAAR,WAdA,kEAe6D,uBAAGA,KAChE,qDAD6D,uBAf7D,4DAmBA,6BAAM,6BACN,yBAAKO,UAAU,oBACf,yBACAgB,IAAKC,IACLC,IAAI,oCAHJ,KAKA,uBAAGlB,UAAU,WAAU,mEAzBvB,+PA+BA,6BA/BA,IA+BO,6BA/BP,mbAwCA,6CAxCA,gH,qCCfK,SAASmB,IACtB,IAAMnC,EAAWC,aAAY,GAIvBI,GAHQF,wBAAc,CACxBC,MAAO,8BAEOD,wBAAc,CAC5BC,MAAO,sDAKX,OAHcD,wBAAc,CACxBC,MAAO,uBAIP,yBAAKY,UAAU,cACf,2BAAOC,KAAK,YAAZ,yeAoBE,kBAAC,IAAD,CAAQR,KAAM2B,IAAQC,QAASrC,EAASO,MAAQ,OAAS,SAAzD,mBArBF,IAuBY,yBAAKS,UAAU,uBACzB,kBAACsB,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBF,QAASrC,EAASO,MAAQ,OAAS,SAApD,yBAGA,kBAAC+B,EAAA,EAASE,KAAV,CAAexB,UAAWhB,EAASO,MAAQ,gBAAkB,kBAC3D,kBAAC+B,EAAA,EAASG,KAAV,CAAeC,GAAIC,IAAMZ,GAAG,WAC5Bf,UAAU,iBADV,aA7BN,IAgCc,yBAAKA,UAAU,uBAC3B,kBAAC,IAAD,CAAQqB,QAASrC,EAASO,MAAQ,OAAS,SAA3C,sBAMGF,EAEL,yBAAKW,UAAU,cACf,2BAAOC,KAAK,YAAZ,6eAoBE,kBAAC,IAAD,CAAQR,KAAM2B,IAAQC,QAASrC,EAASO,MAAQ,OAAS,SAAzD,mBArBF,IAuBY,yBAAKS,UAAU,uBACzB,kBAACsB,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBF,QAASrC,EAASO,MAAQ,OAAS,SAApD,yBAIA,kBAAC+B,EAAA,EAASE,KAAV,CAAexB,UAAWhB,EAASO,MAAQ,gBAAkB,kBAC3D,kBAAC+B,EAAA,EAASG,KAAV,CAAeC,GAAIC,IAAMZ,GAAG,WAC5Bf,UAAU,iBADV,aA9BN,IAiCc,yBAAKA,UAAU,uBAC3B,kBAAC,IAAD,CAAQqB,QAASrC,EAASO,MAAQ,OAAS,SAA3C,sBAQF,yBAAKS,UAAU,cACf,2BAAOC,KAAK,YAAZ,+eAoBE,kBAAC,IAAD,CAAQR,KAAM2B,IAAQC,QAASrC,EAASO,MAAQ,OAAS,SAAzD,mBArBF,IAuBY,yBAAKS,UAAU,uBAC3B,kBAACsB,EAAA,EAAD,CAAUM,KAAK,QACb,kBAACN,EAAA,EAASC,OAAV,CAAiBF,QAASrC,EAASO,MAAQ,OAAS,SAApD,yBAGA,kBAAC+B,EAAA,EAASE,KAAV,CAAexB,UAAWhB,EAASO,MAAQ,gBAAkB,kBAC3D,kBAAC+B,EAAA,EAASG,KAAV,CAAeC,GAAIC,IAAMZ,GAAG,WAC5Bf,UAAU,iBADV,aA7BJ,IAgCc,yBAAKA,UAAU,uBAC3B,kBAAC,IAAD,CAAQP,KAAK,QAAQ4B,QAASrC,EAASO,MAAQ,OAAS,SAAxD,sB,0CC1HO,SAASsC,IACtB,OACE,oCACE,kBAACV,EAAD,O,WCNS,SAASW,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,yBAAK9B,UAAU,UACb,yBAAKA,UAAU,QACb,uBAAGP,KAAK,KAAI,uDAEd,kBAACM,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgC,KAAK,QAAQC,OAAK,EAACC,UAAWpB,IACrC,kBAAC,IAAD,CAAOkB,KAAK,WAAWC,OAAK,EAACC,UAAWnB,IACxC,kBAAC,IAAD,CAAOiB,KAAK,IAAIC,OAAK,EAACC,UAAWJ,OCbvBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACX,EAAD,OAEFY,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0caaab6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.ec60837e.pdf\";","module.exports = __webpack_public_path__ + \"static/media/out.a8a49421.gif\";","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { useMediaQuery } from 'react-responsive';\nimport { Link } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst link_icon = {\n  fontSize: \"5.5vw\",\n\n};\nconst git_icon = {\n  fontSize: \"4.5vw\",\n\n};\n\nconst git_992 = {\n  fontSize: \"22\",\n};\n\nconst link_992 = {\n  fontSize: \"27\",\n};\n\nconst git_688_992 = {\n  fontSize: \"3.5vw\",\n};\n\nconst link_688_992 = {\n  fontSize: \"4.4vw\",\n};\n\nconst DarkToolTip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#2e0718\",\n    color: \"white\",\n    boxShadow: theme.shadows[1],\n    fontSize: 13,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"5px 0px\",\n  },\n}))(Tooltip);\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"white\",\n    color: \"black\",\n    boxShadow: theme.shadows[1],\n    fontSize: 13,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"5px 0px\",\n  },\n}))(Tooltip);\n\nexport default function SocialMedia() {\n  const darkMode = useDarkMode(false);\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-width: 992px)'\n  });\n  if (bp992) {\n    var Component = darkMode.value ? DarkToolTip : LightTooltip;\n    return (\n      <>\n        <Component title=\"LinkedIn\">\n          <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n            <LinkedInIcon color={darkMode.value ? \"secondary\" : \"action\"} style={link_992}/>\n          </a>\n        </Component>\n        <Component title=\"GitHub\">\n          <a href=\"https://www.github.com/sgheidi\">\n            <GitHubIcon color={darkMode.value ? \"secondary\" : \"action\"} style={git_992}/>\n          </a>\n        </Component>\n      </>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <>\n        <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n          <LinkedInIcon color={darkMode.value ? \"secondary\" : \"action\"} style={link_688_992}/>\n        </a>\n        <a href=\"https://www.github.com/sgheidi\">\n          <GitHubIcon color={darkMode.value ? \"secondary\" : \"action\"} style={git_688_992}/>\n        </a>\n      </>\n    );\n  }\n  else {\n    return (\n        <>\n          <a href=\"https://www.linkedin.com/in/shervan-gheidi/\">\n            <LinkedInIcon color={darkMode.value ? \"secondary\" : \"action\"} style={link_icon}/>\n          </a>\n          <a href=\"https://www.github.com/sgheidi\">\n            <GitHubIcon color={darkMode.value ? \"secondary\" : \"action\"} style={git_icon}/>\n          </a>\n        </>\n    );\n  }\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport SocialMedia from './SocialMedia';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport { useMediaQuery } from 'react-responsive';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst sun = {\n  fontSize: \"5.5vw\",\n};\nconst moon = {\n  fontSize: \"5.5vw\",\n};\nconst sun_688 = {\n  fontSize: \"7vw\",\n};\nconst moon_688 = {\n  fontSize: \"7vw\",\n};\nconst sun_688_992 = {\n  fontSize: \"4vw\",\n};\nconst moon_688_992 = {\n  fontSize: \"4vw\",\n};\n\nconst DarkToolTip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#2e0718\",\n    color: \"white\",\n    boxShadow: theme.shadows[1],\n    fontSize: 13,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"0px 0px\",\n  },\n}))(Tooltip);\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"white\",\n    color: \"black\",\n    boxShadow: theme.shadows[1],\n    fontSize: 13,\n    marginBottom: \"10px\",\n  },\n  tooltipPlacementBottom: {\n    margin: \"0px 0px\",\n  },\n}))(Tooltip);\n\nexport default function DarkModeToggle() {\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-width: 992px)'\n  });\n  const darkMode = useDarkMode(false);\n  if (bp992) {\n    var Component = darkMode.value ? DarkToolTip : LightTooltip;\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <Component title=\"Toggle light theme\">\n          <button type=\"button\" onClick={darkMode.disable}>\n            <WbSunnyIcon />\n          </button>\n        </Component>\n        <Component title=\"Toggle dark theme\">\n          <button type=\"button\" onClick={darkMode.enable}>\n            <NightsStayIcon />\n          </button>\n        </Component>\n      </div>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon style={sun_688_992} />\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon style={moon_688_992} />\n        </button>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"dark-mode-toggle\">\n        <SocialMedia />\n        <button type=\"button\" onClick={darkMode.disable}>\n          <WbSunnyIcon style={sun} />\n        </button>\n        <button type=\"button\" onClick={darkMode.enable}>\n          <NightsStayIcon style={moon} />\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport useDarkMode from 'use-dark-mode';\n\nconst useStyles = makeStyles({\n  root_black: {\n    maxWidth: 400,\n    background: '#caded4',\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    color: 'black',\n    fontSize: '16px',\n  },\n  root_white: {\n    maxWidth: 400,\n    background: '#112d4d',\n    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\n    color: 'white',\n    fontSize: '16px',\n  },\n  button_black: {\n    padding: \"10px 10px\",\n    color: 'red',\n  },\n  button_white: {\n    padding: \"10px 10px\",\n    color: 'black',\n  }\n});\n\nexport default function ImgMediaCard() {\n  const darkMode = useDarkMode(false);\n  const classes = useStyles();\n\n  return (\n    <Card className={(darkMode.value == true) ? classes.root_white :\n    classes.root_black}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            <b>chess-ai</b>\n          </Typography>\n          <Typography variant=\"body\" component=\"p\" align=\"alignJustify\">\n            A generalized minimax and alpha-beta pruning search algorithm for perfect, 2-player games.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" className={(darkMode.value == true) ? classes.button_black :\n        classes.button_white}>\n          Continue reading\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport DarkModeToggle from './DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Card from './Card';\n\nexport default function Blog1() {\n  return (\n    <>\n      <div className=\"blog-body-cards\">\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DarkModeToggle from './DarkModeToggle';\nimport useDarkMode from 'use-dark-mode';\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport Typography from '@material-ui/core/Typography';\nimport gif from '../media/out.gif'\nimport '../css/projects.scss';\n\nexport default function Pychess() {\n  return (\n    <>\n      <div className=\"back\">\n        <Link to=\"../\">\n          <ArrowBackIosRoundedIcon color=\"secondary\" />\n        </Link>\n      </div>\n      <div className=\"project-body\">\n        <p className=\"project-header\"> PyChess </p>\n          <p className=\"date\"> Oct. 18, 2020\n            <p className=\"github-tag\"> <a href=\"https://www.github.com/sgheidi/pychess\" >\n            View on GitHub </a> </p>\n          </p>\n          <p className=\"project-body-text\">\n          PyChess has probably been the most fulfilling project I've completed up to date.\n          It combined almost every programming paradigm, coding concept, software engineering 'best\n          practice' and even some math skills I had\n          learned until now, into one project. After finishing the project, I not\n          only felt my programming skills\n          had increased dramatically, I also became more and more interested about a topic I knew\n          virtually nothing\n          about: chess as a game itself. I realized that the game is quite complicated, and that in\n          terms\n          of skill level,\n          the AI i had programmed was nothing compared to contemporary, state-of-the-art\n          engines such as\n          <a href=\"https://stockfishchess.org/\"> Stockfish</a> and\n          <a href=\"https://komodochess.com/\"> Komodo</a>.\n          However, I am still in the process of strengthening the AI's <a href=\n          \"https://en.wikipedia.org/wiki/Evaluation_function\">\n          evaluation function</a> so that\n          it makes better decisions on the moves it makes.\n          <br /><br />\n          <div className=\"image-background\">\n          <img\n          src={gif}\n          alt=\"Chess AI playing against itself\"\n          /> </div>\n          <p className=\"caption\"><i>  Watch my AI play against itself! </i></p>\n          The coolest thing about the AI is that it can constantly be updated with new code, anytime\n          I want it to, or with\n          any new idea I come up with\n          . I wrote every line in this codebase and can apply any new\n          concept or idea and see the difference immediately.\n          <br /> <br />\n          Some of the greatest lessons I learned along the way are: good code organization\n          practices, Python PEP-8\n          style docstrings (for classes and functions), and applying OOP in a real project.\n\n          Before this, I, among many developers, only heard about OOP in school, theory,\n          and in 'interview' type questions. I have rarely used OOP in my code for\n          work or school.\n          However, for a project with a large codebase like this, applying OOP concepts\n          <b> signficantly </b> increased code\n          organization which in turn lead to a much more understandable and less bug-prone codebase.\n          </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport Resume from '../media/resume.pdf';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useMediaQuery } from 'react-responsive';\nimport {Link} from 'react-router-dom';\n\nexport default function BottomNav() {\n  const darkMode = useDarkMode(false);\n  const bp992 = useMediaQuery({\n      query: '(min-device-width: 992px)'\n  });\n  const bp688_992 = useMediaQuery({\n      query: '(min-device-width: 688px) and (max-width: 992px)'\n  });\n  const bp688 = useMediaQuery({\n      query: '(max-width: 688px)'\n  });\n  if (bp688) {\n    return (\n      <div className=\"bottom-nav\">\n      <style type=\"text/css\">\n        {`\n        .btn-light {\n          color: black;\n          background-color: #e8e6e1;\n          border-radius: 25px;\n          box-shadow: 0 3px 5px 2px rgba(90, 90, 90, .3);\n          font-size: 3vw;\n          width: 26vw;\n        }\n        .btn-dark {\n          color: white;\n          background-color: #17302e;\n          border-radius: 25px;\n          box-shadow: 0 3px 5px 2px rgba(90, 90, 90, .3);\n          font-size: 3vw;\n          width: 26vw;\n        }\n        `}\n      </style>\n        <Button href={Resume} variant={darkMode.value ? \"dark\" : \"light\"}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Dropdown>\n          <Dropdown.Toggle variant={darkMode.value ? \"dark\" : \"light\"}>\n            Projects 📝\n          </Dropdown.Toggle>\n          <Dropdown.Menu className={darkMode.value ? \"dropdown-dark\" : \"dropdown-light\"}>\n            <Dropdown.Item as={Link} to=\"/pychess\"\n            className=\"dropdown-item\">PyChess</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown> <div className=\"bottom-nav-divider\"/>\n        <Button variant={darkMode.value ? \"dark\" : \"light\"}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else if (bp688_992) {\n    return (\n      <div className=\"bottom-nav\">\n      <style type=\"text/css\">\n        {`\n        .btn-light {\n          color: black;\n          background-color: #e8e6e1;\n          border-radius: 25px;\n          box-shadow: 0 3px 5px 2px rgba(90, 90, 90, .3);\n          font-size: 1.7vw;\n          width: 20vw;\n        }\n        .btn-dark {\n          color: white;\n          background-color: #17302e;\n          border-radius: 25px;\n          box-shadow: 0 3px 5px 2px rgba(90, 90, 90, .3);\n          font-size: 1.7vw;\n          width: 20vw;\n        }\n        `}\n      </style>\n        <Button href={Resume} variant={darkMode.value ? \"dark\" : \"light\"}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n        <Dropdown>\n          <Dropdown.Toggle variant={darkMode.value ? \"dark\" : \"light\"}>\n            Projects 📝\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className={darkMode.value ? \"dropdown-dark\" : \"dropdown-light\"}>\n            <Dropdown.Item as={Link} to=\"/pychess\"\n            className=\"dropdown-item\">PyChess</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown> <div className=\"bottom-nav-divider\"/>\n        <Button variant={darkMode.value ? \"dark\" : \"light\"}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"bottom-nav\">\n      <style type=\"text/css\">\n        {`\n        .btn-light {\n          color: black;\n          background-color: #e8e6e1;\n          border-radius: 25px;\n          box-shadow: 0 3px 5px 2px rgba(90, 90, 90, .3);\n          font-size: 1.25vw;\n          width: 20vw;\n        }\n        .btn-dark {\n          color: white;\n          background-color: #17302e;\n          border-radius: 25px;\n          box-shadow: 0 3px 5px 2px rgba(90, 90, 90, .3);\n          font-size: 1.25vw;\n          width: 20vw;\n        }\n        `}\n      </style>\n        <Button href={Resume} variant={darkMode.value ? \"dark\" : \"light\"}>\n        CV 💼\n        </Button> <div className=\"bottom-nav-divider\"/>\n      <Dropdown drop=\"down\">\n        <Dropdown.Toggle variant={darkMode.value ? \"dark\" : \"light\"}>\n          Projects 📝\n        </Dropdown.Toggle>\n        <Dropdown.Menu className={darkMode.value ? \"dropdown-dark\" : \"dropdown-light\"}>\n          <Dropdown.Item as={Link} to=\"/pychess\"\n          className=\"dropdown-item\">PyChess</Dropdown.Item>\n        </Dropdown.Menu>\n        </Dropdown> <div className=\"bottom-nav-divider\"/>\n        <Button href=\"/blog\" variant={darkMode.value ? \"dark\" : \"light\"}>\n          Blog 💻\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DarkModeToggle from './components/DarkModeToggle';\nimport Card from './components/Card';\nimport BottomNav from './components/BottomNav';\nimport Test from './components/Test';\nimport useDarkMode from 'use-dark-mode';\nimport {Link} from 'react-router-dom';\nimport './css/styles.scss';\nimport './css/breakpoints/mobile.scss';\nimport './css/breakpoints/tablet.scss';\nimport './css/breakpoints/smallscreen.scss';\nimport './css/breakpoints/bigscreen.scss';\nimport './css/scroller.scss';\nimport './css/theme.scss';\n\nexport default function Main()  {\n  return (\n    <>\n      <BottomNav />\n    </>\n  );\n}\n","import React from 'react';\nimport Blog1 from './components/Blog1';\nimport Pychess from './components/Pychess';\nimport DarkModeToggle from './components/DarkModeToggle';\nimport Main from './Main';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <>\n      <Router>\n        <div className=\"navbar\">\n          <div className=\"name\">\n            <a href=\"/\"><b>shervan gheidi ☕ </b></a>\n          </div>\n          <DarkModeToggle />\n        </div>\n        <Switch>\n          <Route path=\"/blog\" exact component={Blog1} />\n          <Route path=\"/pychess\" exact component={Pychess} />\n          <Route path=\"/\" exact component={Main} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
(this["webpackJsonpgithub-pages"]=this["webpackJsonpgithub-pages"]||[]).push([[0],{32:function(e,a,t){},41:function(e,a,t){e.exports=t.p+"static/media/out.a8a49421.gif"},58:function(e,a,t){e.exports=t.p+"static/media/tetris.1c460e76.gif"},59:function(e,a,t){e.exports=t.p+"static/media/ChessProgramming.ea951710.jpg"},60:function(e,a,t){e.exports=t.p+"static/media/pin.68f67dd5.png"},61:function(e,a,t){e.exports=t.p+"static/media/resume.c93e21fd.pdf"},66:function(e,a,t){e.exports=t(85)},71:function(e,a,t){},78:function(e,a,t){},79:function(e,a,t){},80:function(e,a,t){},81:function(e,a,t){},82:function(e,a,t){},83:function(e,a,t){},84:function(e,a,t){},85:function(e,a,t){"use strict";t.r(a);var n=t(0),i=t.n(n),o=t(8),r=t.n(o),l=(t(71),t(9)),s=t(55),c=t.n(s),m=t(54),h=t.n(m),d=(t(21),t(110)),u=t(36),g=Object(u.a)((function(e){return{tooltip:{backgroundColor:"#2e0718",color:"white",boxShadow:e.shadows[1],fontSize:13,marginBottom:"10px"},tooltipPlacementBottom:{margin:"5px 0px"}}}))(d.a),p=Object(u.a)((function(e){return{tooltip:{backgroundColor:"white",color:"black",boxShadow:e.shadows[1],fontSize:13,marginBottom:"10px"},tooltipPlacementBottom:{margin:"5px 0px"}}}))(d.a);function f(){var e=Object(l.a)(!1),a=e.value?g:p;return i.a.createElement(i.a.Fragment,null,i.a.createElement(a,{title:"LinkedIn"},i.a.createElement("a",{href:"https://www.linkedin.com/in/shervan-gheidi/"},i.a.createElement(h.a,{color:e.value?"secondary":"action"}))),i.a.createElement(a,{title:"GitHub"},i.a.createElement("a",{href:"https://www.github.com/sgheidi"},i.a.createElement(c.a,{color:e.value?"secondary":"action",className:"git"}))))}var b=t(56),E=t.n(b),w=t(57),v=t.n(w),y=Object(u.a)((function(e){return{tooltip:{backgroundColor:"#2e0718",color:"white",boxShadow:e.shadows[1],fontSize:13,marginBottom:"10px"},tooltipPlacementBottom:{margin:"0px 0px"}}}))(d.a),k=Object(u.a)((function(e){return{tooltip:{backgroundColor:"white",color:"black",boxShadow:e.shadows[1],fontSize:13,marginBottom:"10px"},tooltipPlacementBottom:{margin:"0px 0px"}}}))(d.a);function I(){var e=Object(l.a)(!1),a=e.value?y:k;return i.a.createElement("div",{className:"dark-mode-toggle"},i.a.createElement(f,null),i.a.createElement(a,{title:"Toggle light theme"},i.a.createElement("button",{type:"button",onClick:e.disable},i.a.createElement(E.a,{className:"sun"}))),i.a.createElement(a,{title:"Toggle dark theme"},i.a.createElement("button",{type:"button",onClick:e.enable},i.a.createElement(v.a,{clsasName:"moon"}))))}var N=t(15),x=t.n(N),P=t(7),j=t(18);function T(){var e=Object(l.a)(!1);return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"card-body"},i.a.createElement("div",{className:"card-header1"},"Chess Programming: A Reflection"),"Chess programming has single-handedly resulted in my skills in algorithm design, flow and implementation to be signficantly stronger. It has not only forced me to think analytically about...",i.a.createElement(P.b,{to:"/chessprogramming"}," ",i.a.createElement("br",null),i.a.createElement(j.a,{variant:e.value?"dark":"light"},"Continue reading"))))}function A(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"back-blog"},i.a.createElement(P.b,{to:"../"},i.a.createElement(x.a,{color:"secondary"}))),i.a.createElement(T,null))}var C=t(41),O=t.n(C);t(32);function F(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"back"},i.a.createElement(P.b,{to:"../"},i.a.createElement(x.a,{color:"secondary"}))),i.a.createElement("div",{className:"project-body"},i.a.createElement("p",{className:"project-header"}," \u265a PyChess "),i.a.createElement("p",{className:"date"}," Oct. 18, 2020 \xa0 \u2022 \xa0 3 min read",i.a.createElement("p",{className:"github-tag"}," ",i.a.createElement("a",{href:"https://www.github.com/sgheidi/pychess"},"View on GitHub ")," ")),i.a.createElement("p",{className:"project-body-text"},"PyChess has probably been the most fulfilling project I've completed up to date. It combined almost every programming paradigm, coding concept, software engineering 'best practice' and even some math skills I had learned until now, into one project. After finishing the project, I not only felt my programming skills had increased dramatically, I also became more and more interested about a topic I knew virtually nothing about: chess as a game itself. I realized that the game is quite complicated, and that in terms of skill level, the AI i had programmed was nothing compared to contemporary, state-of-the-art engines such as",i.a.createElement("a",{href:"https://stockfishchess.org/"}," Stockfish")," and ",i.a.createElement("a",{href:"https://komodochess.com/"},"Komodo"),". However, I am still in the process of strengthening the AI's ",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Evaluation_function"},"evaluation function")," so that it makes better decisions on the moves it makes. ",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{className:"image-background"},i.a.createElement("img",{src:O.a,alt:"Chess AI playing against itself"})," "),i.a.createElement("p",{className:"caption"},i.a.createElement("i",null,"  Watch my AI play against itself! ")),"The coolest thing about the AI is that it can constantly be updated with new code, anytime I want it to, or with any new idea I come up with. I wrote every line in this codebase and can apply any new concept or idea and see the difference immediately. ",i.a.createElement("br",null),i.a.createElement("br",null),"Some lessons I learned along the way are: good code organization practices, Python PEP-8 style docstrings (for classes and functions), and applying OOP in a real project. Before this, I, among many developers, only heard about OOP in school, theory, and in 'interview' type questions. I have rarely used OOP in my code for work or school. However, for a project with a large codebase like this, applying OOP concepts ",i.a.createElement("b",null," signficantly ")," increased code organization which in turn lead to a much more understandable and less bug-prone codebase. ",i.a.createElement("br",null)," ",i.a.createElement("br",null),"Perhaps the greatest lesson I learned from this project is the process of building and designing a relatively large system from the ground up. When building something like this, one is faced with many design decisions such as the program's flow of logic, which functions to encapsulate into classes and keeping the code as least bug-prone as possible. I designed the codebase so that it is as organized and encapsulated as it can be, and made the program flow of logic as simple as possible, for the long term.",i.a.createElement("p",{className:"inner-header"}," The AI "),"The AI uses minimax and alpha-beta pruning to search the game tree at a certain depth ",i.a.createElement("div",{className:"code"}," d ")," and come up with a move of highest value. When searching the moves, the AI uses an evauation function to assign a score to the position, what it seeks to maximize. For example, the most basic evaluation function would be to give, if it were White, 1 point for every pawn which is alive, More advanced..")))}function S(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"back"},i.a.createElement(P.b,{to:"../"},i.a.createElement(x.a,{color:"secondary"}))),i.a.createElement("div",{className:"project-body"},i.a.createElement("p",{className:"project-header"}," Single Player FPS Game in Unity3D"),i.a.createElement("p",{className:"date"}," Oct. 18, 2020",i.a.createElement("p",{className:"github-tag"}," ",i.a.createElement("a",{href:"https://www.github.com/sgheidi/pychess"},"View on GitHub ")," ")),i.a.createElement("p",{className:"project-body-text"},"Game development using Unity3D has been a very interesting experience for me, as I have never used a game engine in the past and have mainly . Coming from a background with lower-level languages and frameworks such as C++, OpenGL and Pygame, game development with Unity has been enlightening because from a programming perspective, it makes a lot of things simpler to work with. The whole game does not have to be programmable as like in low-level game programming such as Python or OpenGL. You simply create objects in the world and attach scripts, tags and properties to them, which makes the whole process significantly easier, from debugging, to orgnization, to presentation.")))}var B=t(58),G=t.n(B);function L(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"back"},i.a.createElement(P.b,{to:"../"},i.a.createElement(x.a,{color:"secondary"}))),i.a.createElement("div",{className:"project-body"},i.a.createElement("p",{className:"project-header"}," \ud83d\udd79\ufe0f\xa0Tetris Friends "),i.a.createElement("p",{className:"date"}," Nov. 10, 2020 \xa0 \u2022 \xa0 4 min read",i.a.createElement("p",{className:"github-tag"}," ",i.a.createElement("a",{href:"https://www.github.com/sgheidi/tetrisfriends"},"View on GitHub ")," ")),i.a.createElement("p",{className:"project-body-text"},"Developing a tetris friends clone was one of my first projects in game development and gave me the the gist of how games work such as the usual flow of logic, the event loop for drawing elements onto the window, and how the coding is done behind all of this. The frameworks used were OpenGL and GLFW. There are many debates on whether a beginner should start with a lower level API (such as OpenGL) or a higher level library such as SFML or Pygame. My stance on this is that a beginner should start with a higher-level one since it gives them a better understanding of how everything works, and then they can transition to learning lower-level API's to further their understanding.",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{className:"image-background"},i.a.createElement("img",{src:G.a,alt:"Tetris Friends"})," "),i.a.createElement("p",{className:"caption"},i.a.createElement("i",null,"  Tetris Friends demo. ")),"However, with the debate on frameworks aside, this was actually originally a school project meant to be a mixture of tetris and falling fruits, which I later decided to transform into a game I often used to play: tetris friends.",i.a.createElement("p",{className:"inner-header"}," Game Features "),"The features of the game, similar to the original, include:",i.a.createElement("li",null,"'Holding pieces'. Press shift to 'hold' a piece to use later. Press again to activate held piece."),i.a.createElement("li",null,"Ability to see the next 4 pieces. This makes it much faster to play with, as you know what's coming up next."),i.a.createElement("li",null,"Hard-dropping by using 'space' key."),i.a.createElement("li",null,"Seeing a shaded outline of where the piece would fall if hard-dropped."),i.a.createElement("li",null,"Clearing lines. Standard line-clearing algorithm."),i.a.createElement("li",null,"Resetting, pausing, quitting the game (keys R, P, Q). Easy and instant."),i.a.createElement("li",null,"Difficulty increases as you clear more lines!")," ",i.a.createElement("br",null),"As a retrospective, this game was very difficult to develop at first for 2 big reasons:",i.a.createElement("br",null),i.a.createElement("br",null)," 1) It was my very first game and I had no clue how games actually worked, what event loops were and how they're coded. I had to wrap my head around using functions effectively and how the game should be structured.",i.a.createElement("br",null)," 2) Using a low-level API for a first-time project. I highly recommend against this because of the steep learning curve for beginners. I didn't know the basics and was getting overwhelmed by OpenGL's low-level syntax. ",i.a.createElement("br",null)," ",i.a.createElement("br",null),"For anyone wanting to get started with a project such as this, I would recommend using a library such as SFML (C++) or Pygame (Python), in order to understand the basics, and create a simple game with those instead before learning OpenGL.")))}var _=t(59),z=t.n(_),H=t(60),W=t.n(H);function M(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"back"},i.a.createElement(P.b,{to:"../"},i.a.createElement(x.a,{color:"secondary"}))),i.a.createElement("div",{className:"project-body"},i.a.createElement("p",{className:"project-header"}," \u265f\ufe0f Chess Programming: A Reflection "),i.a.createElement("p",{className:"date"}," Nov. 6, 2020 \xa0 \u2022 \xa0 4 min read"),i.a.createElement("p",{className:"project-body-text"},"Chess programming has single-handedly resulted in my skills in algorithm design, program flow and implementation to be signficantly stronger. It has not only forced me to think analytically about something that seems relatively straight-forward, it made me use important concepts such as OOP, inheritance, scoping and namespaces (i.e in C++) and other good coding practices. The most fun part of chess programming is building your own chess AI that does exactly what you code it to do (this is done using",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Evaluation_function"}," evaluation functions"),"). The process of building a large system from scratch can at first seem daunting, but once you really get into it, it actually becomes quite fun, especially strengthening the AI. ",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{className:"image-background"},i.a.createElement("img",{src:z.a,alt:"Computer chess"})," "),i.a.createElement("p",{className:"caption"},i.a.createElement("i",null,"  The chess board. ")),"An example of a crucial design choice I had to make for implementing the full game rules of chess was coding a",i.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Pin_(chess)"}," pin"),". From Wikipedia, a pin in chess '",i.a.createElement("i",null,"is a situation brought on by an attacking piece in which a defending piece cannot move without exposing a more valuable defending piece on its other side to capture by the attacking piece."),"' The following image describes the situation quite well: ",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{className:"image-background"},i.a.createElement("img",{src:W.a,alt:"Chess pin"})," "),i.a.createElement("p",{className:"caption"},i.a.createElement("i",null,"  The black queen is about to be pinned by the white bishop. ")),"Pins are a fundamental game rule in chess. My approach, in pseudocode, is the following: ",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{class:"pseudocode"},"/* this function should be called anytime Piece moves */\n","void Piece::check_pin() { /* note that Piece can be any of B, R, Q */\n","  for (i=0;i<piece_count;i++) {\n","    if (alive[i]) {\n","      if (king_in_path(i) and num_pieces_between(i) == 1)\n","        pin(i, get_pinned_piece(i))\n","    }\n","  }\n","}\n"),i.a.createElement("br",null),"The algorithm is very simple, and literally translates to plain English as, for say, a bishop: if it is alive and the king is in its path and the number of (opposite-colored) pieces between the king and itself is 1, pin that piece. The sub-functions are also pretty self-explanatory, and all the ",i.a.createElement("div",{className:"code"},"pin")," function really does is just filter the pinned piece's movelist with the pinner's (the bishop in this case) movelist spanning from the pinner's position to the opposing king's position.",i.a.createElement("br",null),i.a.createElement("br",null),"I am sure there are better and more efficient ways for this implementation (as with everything), but my approach works well in all situations I've tested. The actual implementation of the above can be found",i.a.createElement("a",{href:"https://github.com/sgheidi/FastChess/blob/master/src/core/black/bishop.cc#L33"}," here"),".",i.a.createElement("p",{className:"inner-header"}," Notable challenges "),"By far the most challenging problem in chess programming has been debugging the AI. The AI, even at a mere depth of 2, can search thousands of positions for a single move, and if something goes wrong in the search, be it a bug with enpassant or some weird corner case I've forgetten about, I would have to search the logs (i.e the positions it has searched for) and see where the bug occured. This can be a very tedious process. ",i.a.createElement("br",null)," ",i.a.createElement("br",null),"To make this a bit easier for myself, I made different flags for testing purposes (i.e ",i.a.createElement("div",{className:"code"},"#define DEBUGAI")," in C++) and saved all the moves that the AI searched for in a file named ",i.a.createElement("div",{className:"code"},"debug.log"),". Here, I could see every move that the AI considered, and I would see the last set of moves that it made before a segmentation fault happened.",i.a.createElement("br",null),i.a.createElement("br",null),"Another challenge was checking whether the AI would make the correct decisions in certain circumstances. To avoid playing it from the beginning every time, I built several different testing environments with specific board orientations to see how the AI would play. This is still a work in progress.")))}var q=t(61),D=t.n(q),R=t(24);function U(){var e=Object(l.a)(!1);return i.a.createElement("div",{className:"bottom-nav"},i.a.createElement(j.a,{href:D.a,variant:e.value?"dark":"light"},"CV\xa0 \ud83d\udcbc")," ",i.a.createElement("div",{className:"bottom-nav-divider"}),i.a.createElement(R.a,null,i.a.createElement(R.a.Toggle,{variant:e.value?"dark":"light"},"Projects\xa0 \ud83d\udcdd"),i.a.createElement(R.a.Menu,{className:e.value?"dropdown-dark":"dropdown-light"},i.a.createElement(R.a.Item,{as:P.b,to:"/pychess",className:"dropdown-item"},"PyChess"),i.a.createElement(R.a.Item,{as:P.b,to:"/tetrisfriends",className:"dropdown-item"},"TetrisFriends")))," ",i.a.createElement("div",{className:"bottom-nav-divider"}),i.a.createElement(P.b,{to:"/blog"},i.a.createElement(j.a,{variant:e.value?"dark":"light"},"Blogs\xa0 \ud83d\udcbb")))}t(78),t(79),t(80),t(81),t(82),t(83),t(84);function V(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(U,null),i.a.createElement(T,null))}var J=t(5);function Q(){return i.a.createElement(i.a.Fragment,null,i.a.createElement(P.a,null,i.a.createElement("div",{className:"navbar"},i.a.createElement("div",{className:"name"},i.a.createElement("a",{href:"/"},i.a.createElement("b",null,"shervan gheidi \u2615 "))),i.a.createElement(I,null)),i.a.createElement(J.c,null,i.a.createElement(J.a,{path:"/blog",exact:!0,component:A}),i.a.createElement(J.a,{path:"/pychess",exact:!0,component:F}),i.a.createElement(J.a,{path:"/unityfps",exact:!0,component:S}),i.a.createElement(J.a,{path:"/ChessProgramming",exact:!0,component:M}),i.a.createElement(J.a,{path:"/TetrisFriends",exact:!0,component:L}),i.a.createElement(J.a,{path:"/",exact:!0,component:V}))))}Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(i.a.StrictMode,null,i.a.createElement(Q,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[66,1,2]]]);
//# sourceMappingURL=main.f3998698.chunk.js.map